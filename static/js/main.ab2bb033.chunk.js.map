{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","width","props","itemWidth","frameSize","translateX","leftButton","rightButton","currentLeftPoint","resArr","images","fullSize","step","noAnim","generateArr","infinite","arr","leftPoint","start","length","Math","abs","count","i","push","setState","slideRight","frame","maxRightSlade","slideByStep","setTimeout","slideLeft","this","animationDuration","styleFocus","transform","transition","buttonStyle","top","position","display","height","rightButtonStyle","left","parseFloat","className","style","map","image","index","key","src","alt","disabled","type","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab2bb033.chunk.js","sourcesContent":["/* eslint-disable no-unreachable */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-plusplus */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    width: `${this.props.itemWidth * this.props.frameSize}`,\n    translateX: this.props.itemWidth,\n    leftButton: true,\n    rightButton: false,\n    currentLeftPoint: 0,\n    resArr: this.props.images,\n    fullSize: this.props.step * 2 + this.props.frameSize,\n    noAnim: false,\n  }\n\n  componentDidMount() {\n    if (this.props.infinite === true) {\n      this.setState(state => ({\n        leftButton: false,\n        translateX: this.props.itemWidth * this.props.step,\n        currentLeftPoint: this.props.images.length - this.props.step,\n        resArr: this.generateArr(\n          state.fullSize,\n          this.props.infinite,\n          this.props.images,\n          this.props.images.length - this.props.step,\n          this.props.step + this.props.frameSize - 1,\n        ),\n      }));\n    }\n  }\n\n  generateArr = (fullSize, infinite, arr, leftPoint) => {\n    const start = (leftPoint >= arr.length || leftPoint < 0)\n      ? Math.abs(Math.abs(leftPoint) - arr.length)\n      : leftPoint;\n    const resArr = [];\n\n    let count = start;\n\n    for (let i = 0; i < fullSize; i++) {\n      count = (count > arr.length - 1)\n        ? 0\n        : count;\n      resArr.push(arr[count]);\n      count++;\n    }\n\n    this.setState({\n      currentLeftPoint: start,\n    });\n\n    switch (infinite) {\n      case false:\n        return arr;\n\n        break;\n      default:\n        return resArr;\n    }\n  }\n\n  slideRight = (step, frame, translateX, itemWidth, infinite) => {\n    const maxRightSlade = 1300 - frame * itemWidth;\n    const slideByStep = translateX + step * itemWidth;\n\n    switch (infinite) {\n      case true:\n        this.setState(state => ({\n          currentLeftPoint: state.currentLeftPoint + step,\n          translateX: state.translateX + step * itemWidth,\n          leftButton: false,\n          noAnim: false,\n        }));\n        setTimeout(() => {\n          this.setState(state => ({\n            noAnim: true,\n            resArr: this.generateArr(\n              state.fullSize,\n              this.props.infinite,\n              this.props.images,\n              state.currentLeftPoint,\n            ),\n            translateX: (step) * itemWidth,\n          }));\n        }, 1000);\n\n        break;\n      default:\n        if (slideByStep < maxRightSlade) {\n          this.setState(state => ({\n            translateX: state.translateX + (step * itemWidth),\n            leftButton: false,\n          }));\n        } else {\n          this.setState({\n            translateX: maxRightSlade,\n            rightButton: true,\n            leftButton: false,\n          });\n        }\n    }\n  }\n\n  slideLeft = (step, translateX, itemWidth, infinite) => {\n    switch (infinite) {\n      case true:\n        this.setState(state => ({\n          currentLeftPoint: state.currentLeftPoint - step,\n          translateX: state.translateX - (step * itemWidth),\n          leftButton: false,\n          noAnim: false,\n        }));\n        setTimeout(() => {\n          this.setState(state => ({\n            noAnim: true,\n            resArr: this.generateArr(\n              state.fullSize,\n              this.props.infinite,\n              this.props.images,\n              state.currentLeftPoint,\n              this.props.step,\n              this.props.frameSize,\n            ),\n            translateX: (step) * itemWidth,\n          }));\n        }, 1000);\n\n        break;\n      default:\n        if (translateX > step * itemWidth) {\n          this.setState(state => ({\n            translateX: state.translateX - (step * itemWidth),\n            rightButton: '',\n          }));\n        } else {\n          this.setState({\n            translateX: 0,\n            leftButton: true,\n            rightButton: false,\n          });\n        }\n    }\n  }\n\n  render() {\n    const {\n      width, translateX, leftButton, rightButton, resArr, noAnim,\n    } = this.state;\n    const {\n      step, frameSize, itemWidth, animationDuration, infinite,\n    } = this.props;\n\n    const styleFocus = (!noAnim)\n      ? {\n        transform: `translateX(-${translateX}px)`,\n        transition: `${animationDuration}ms`,\n      }\n      : {\n        transform: `translateX(-${translateX}px)`,\n      };\n\n    const buttonStyle = {\n      top: '50%',\n      position: 'absolute',\n      display: 'block',\n      'border-radius': '15px',\n      width: '50px',\n      height: '30px',\n    };\n    const rightButtonStyle = {\n      ...buttonStyle,\n      left: `${+width + itemWidth - parseFloat(buttonStyle.width)}px`,\n    };\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${+width + itemWidth}px` }}\n      >\n        <div style={{ width: `${width}px` }} className=\"focus\">\n          <ul\n            style={styleFocus}\n            className=\"Carousel__list\"\n          >\n            {resArr.map((image, index) => (\n              <li key={index}>\n                <img src={image} alt={index + 1} />\n              </li>\n            ))}\n\n          </ul>\n        </div>\n        <button\n          style={buttonStyle}\n          className=\"prev\"\n          disabled={leftButton}\n          type=\"button\"\n          onClick={() => (\n            this.slideLeft(step, translateX, itemWidth, infinite)\n          )}\n        >\n          ‚Üê\n        </button>\n        <button\n          style={rightButtonStyle}\n          className=\"next\"\n          disabled={rightButton}\n          type=\"button\"\n          onClick={() => (\n            this.slideRight(step, frameSize, translateX, itemWidth, infinite)\n          )}\n        >\n          ‚Üí\n        </button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}