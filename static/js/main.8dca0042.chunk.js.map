{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","width","props","itemWidth","frameSize","translateX","leftButton","rightButton","slideRight","step","frame","setState","slideLeft","this","animationDuration","className","style","transform","transition","images","map","image","index","key","src","alt","left","disabled","type","onClick","React","Component","App","infinite","ReactDOM","render","document","getElementById"],"mappings":"kOAmGeA,G,wNA9FbC,MAAQ,CACNC,MAAM,GAAD,OAAK,EAAKC,MAAMC,UAAY,EAAKD,MAAME,UAAvC,MACLC,WAAY,EACZC,WAAY,OACZC,YAAa,I,EAGfC,WAAa,SAACC,EAAMC,EAAOL,EAAYF,GACjCE,EAAaI,EAAON,EACpB,KAAOO,EAAQP,EACjB,EAAKQ,UAAS,SAAAX,GAAK,MAAK,CACtBK,WAAYL,EAAMK,WAAaI,EAAON,EACtCG,WAAY,OAGd,EAAKK,SAAS,CACZN,WAAY,KAAOK,EAAQP,EAC3BI,YAAa,U,EAKnBK,UAAY,SAACH,EAAMJ,EAAYF,GACzBE,EACAI,EAAON,EACT,EAAKQ,UAAS,SAAAX,GAAK,MAAK,CACtBK,WAAYL,EAAMK,WAAaI,EAAON,EACtCI,YAAa,OAGf,EAAKI,SAAS,CACZN,WAAY,EACZC,WAAY,U,4CAKlB,WAAU,IAAD,OACP,EAAuDO,KAAKb,MAApDC,EAAR,EAAQA,MAAOI,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,WAAYC,EAAvC,EAAuCA,YACvC,EAA0DM,KAAKX,MAAvDO,EAAR,EAAQA,KAAML,EAAd,EAAcA,UAAWD,EAAzB,EAAyBA,UAAWW,EAApC,EAAoCA,kBAEpC,OACE,yBAAKC,UAAU,YACb,yBAAKC,MAAO,CAAEf,MAAM,GAAD,OAAKA,IAAWc,UAAU,SAC3C,wBACEC,MAAO,CACLC,UAAU,eAAD,OAAiBZ,EAAjB,OACTa,WAAW,GAAD,OAAKJ,EAAL,OAEZC,UAAU,kBAETF,KAAKX,MAAMiB,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACrB,wBAAIC,IAAKF,GACP,yBAAKG,IAAKH,EAAOI,IAAKH,EAAQ,UAMtC,4BACEN,MAAO,CAAEU,KAAK,GAAD,OAAK,IAAMvB,EAAYC,EAAY,EAAnC,OACbW,UAAU,OACVY,SAAUrB,EACVsB,KAAK,SACLC,QAAS,kBACP,EAAKjB,UAAUH,EAAMJ,EAAYF,KANrC,UAWA,4BACEa,MAAO,CAAEU,KAAK,GAAD,OAAK,KAAOvB,EAAYC,EAAY,EAApC,OACbW,UAAU,OACVY,SAAUpB,EACVqB,KAAK,SACLC,QAAS,kBACP,EAAKrB,WAAWC,EAAML,EAAWC,EAAYF,KANjD,e,GAvEe2B,IAAMC,YCmCdC,E,4MAjCbhC,MAAQ,CACNmB,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWN,KAAKb,MAAhBmB,OAER,OACE,yBAAKJ,UAAU,OACb,kBAAC,EAAD,CACEI,OAAQA,EACRV,KAAM,EACNL,UAAW,EACXD,UAAW,IACXW,kBAAmB,IACnBmB,UAAU,S,GA3BFH,IAAMC,WCDxBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.8dca0042.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    width: `${this.props.itemWidth * this.props.frameSize}px`,\n    translateX: 0,\n    leftButton: 'true',\n    rightButton: '',\n  }\n\n  slideRight = (step, frame, translateX, itemWidth) => {\n    if (translateX + step * itemWidth\n      < 1300 - frame * itemWidth) {\n      this.setState(state => ({\n        translateX: state.translateX + step * itemWidth,\n        leftButton: '',\n      }));\n    } else {\n      this.setState({\n        translateX: 1300 - frame * itemWidth,\n        rightButton: 'true',\n      });\n    }\n  }\n\n  slideLeft = (step, translateX, itemWidth) => {\n    if (translateX\n      > step * itemWidth) {\n      this.setState(state => ({\n        translateX: state.translateX - step * itemWidth,\n        rightButton: '',\n      }));\n    } else {\n      this.setState({\n        translateX: 0,\n        leftButton: 'true',\n      });\n    }\n  }\n\n  render() {\n    const { width, translateX, leftButton, rightButton } = this.state;\n    const { step, frameSize, itemWidth, animationDuration } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <div style={{ width: `${width}` }} className=\"focus\">\n          <ul\n            style={{\n              transform: `translateX(-${translateX}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n            className=\"Carousel__list\"\n          >\n            {this.props.images.map((image, index) => (\n              <li key={image}>\n                <img src={image} alt={index + 1} />\n              </li>\n            ))}\n\n          </ul>\n        </div>\n        <button\n          style={{ left: `${855 - itemWidth * frameSize / 2}px` }}\n          className=\"prev\"\n          disabled={leftButton}\n          type=\"button\"\n          onClick={() => (\n            this.slideLeft(step, translateX, itemWidth)\n          )}\n        >\n          ←\n        </button>\n        <button\n          style={{ left: `${1008 + itemWidth * frameSize / 2}px` }}\n          className=\"next\"\n          disabled={rightButton}\n          type=\"button\"\n          onClick={() => (\n            this.slideRight(step, frameSize, translateX, itemWidth)\n          )}\n        >\n          →\n        </button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}